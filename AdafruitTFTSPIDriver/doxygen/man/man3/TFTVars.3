.TH "TFTVars" 3 "Mon Jan 15 2018" "AdafruitTFTSPIDriver" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TFTVars
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <AdafruitTFTSPIDriver\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "uint16_t \fBwidth\fP"
.br
.ti -1c
.RI "uint16_t \fBheight\fP"
.br
.ti -1c
.RI "uint16_t \fBcursor_x\fP"
.br
.ti -1c
.RI "uint16_t \fBcursor_y\fP"
.br
.ti -1c
.RI "uint8_t \fBrotation\fP"
.br
.ti -1c
.RI "uint8_t \fBtextSize\fP"
.br
.ti -1c
.RI "uint16_t \fBtextColor\fP"
.br
.ti -1c
.RI "uint16_t \fBtextBGColor\fP"
.br
.ti -1c
.RI "bool \fBwrap\fP"
.br
.ti -1c
.RI "bool \fBcp437\fP"
.br
.ti -1c
.RI "\fBGFXfont\fP * \fBgfxFont\fP"
.br
.ti -1c
.RI "\fBAVRPin\fP * \fBcs\fP"
.br
.ti -1c
.RI "\fBAVRPin\fP * \fBdc\fP"
.br
.ti -1c
.RI "\fBAVRPin\fP * \fBrst\fP"
.br
.ti -1c
.RI "\fBAVRPin\fP * \fBmosi\fP"
.br
.ti -1c
.RI "\fBAVRPin\fP * \fBmiso\fP"
.br
.ti -1c
.RI "\fBAVRPin\fP * \fBsclk\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Contains all the variables associated with the touchscreen\&. 
.SH "Field Documentation"
.PP 
.SS "bool TFTVars::cp437"
If set, use correct CP437 char set (default is off) > 
.SS "\fBAVRPin\fP* TFTVars::cs"
Chip Select\&. > 
.SS "uint16_t TFTVars::cursor_x"
Cursor x-position used in some methods to specify where to display\&. > 
.SS "uint16_t TFTVars::cursor_y"
Cursor y-position used in some methods to specify where to display\&. > 
.SS "\fBAVRPin\fP* TFTVars::dc"
Data or Command\&. Low indicates command and high indicates data\&. > 
.SS "\fBGFXfont\fP* TFTVars::gfxFont"
Pointer to a \fBGFXfont\fP structure for custom fonts\&. > 
.SS "uint16_t TFTVars::height"
Screen height according to rotation\&. > 
.SS "\fBAVRPin\fP* TFTVars::miso"
Master In Slave Out SPI Pin\&. > 
.SS "\fBAVRPin\fP* TFTVars::mosi"
Master Out Slave In SPI Pin\&. > 
.SS "uint8_t TFTVars::rotation"
Current orientation of the screen > 
.SS "\fBAVRPin\fP* TFTVars::rst"
Reset\&. TFT has a active low reset\&. > 
.SS "\fBAVRPin\fP* TFTVars::sclk"
Slave Clock SPI Pin\&. > 
.SS "uint16_t TFTVars::textColor"
Color of text > 
.SS "uint8_t TFTVars::textSize"
Multiplier for the font > 
.SS "uint16_t TFTVars::width"
Screen width according to rotation\&. > 
.SS "bool TFTVars::wrap"
If set, 'wrap' text at right edge of display > 

.SH "Author"
.PP 
Generated automatically by Doxygen for AdafruitTFTSPIDriver from the source code\&.
